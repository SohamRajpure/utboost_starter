[
  {
    "instance_id": "django__django-10914",
    "model_patch": "diff --git a/django/conf/global_settings.py b/django/conf/global_settings.py\nindex acee9887d2..bdeec80610 100644\n--- a/django/conf/global_settings.py\n+++ b/django/conf/global_settings.py\n@@ -304,7 +304,7 @@ FILE_UPLOAD_TEMP_DIR = None\n \n # The numeric mode to set newly-uploaded files to. The value should be a mode\n # you'd pass directly to os.chmod; see https://docs.python.org/library/os.html#files-and-directories.\n-FILE_UPLOAD_PERMISSIONS = None\n+FILE_UPLOAD_PERMISSIONS = 0o644\n \n # The numeric mode to assign to newly-created directories, when uploading files.\n # The value should be a mode as you'd pass to os.chmod;\n",
    "model_name_or_path": "20241209_babelcloud_gru"
  },
  {
    "instance_id": "django__django-10914",
    "model_patch": "diff --git a/django/conf/global_settings.py b/django/conf/global_settings.py\nindex acee9887d2..bdeec80610 100644\n--- a/django/conf/global_settings.py\n+++ b/django/conf/global_settings.py\n@@ -304,7 +304,7 @@ FILE_UPLOAD_TEMP_DIR = None\n \n # The numeric mode to set newly-uploaded files to. The value should be a mode\n # you'd pass directly to os.chmod; see https://docs.python.org/library/os.html#files-and-directories.\n-FILE_UPLOAD_PERMISSIONS = None\n+FILE_UPLOAD_PERMISSIONS = 0o644\n \n # The numeric mode to assign to newly-created directories, when uploading files.\n # The value should be a mode as you'd pass to os.chmod;\ndiff --git a/test_upload_permissions.py b/test_upload_permissions.py\nnew file mode 100644\nindex 0000000000..7e4be8acfa\n--- /dev/null\n+++ b/test_upload_permissions.py\n@@ -0,0 +1,41 @@\n+import os\n+import tempfile\n+from django.conf import settings\n+from django.core.files.storage import FileSystemStorage\n+from django.core.files.uploadedfile import SimpleUploadedFile, TemporaryUploadedFile\n+\n+# Initialize Django settings\n+settings.configure(\n+    DEBUG=True,\n+    MEDIA_ROOT=tempfile.mkdtemp(),\n+    DEFAULT_FILE_STORAGE='django.core.files.storage.FileSystemStorage',\n+)\n+\n+def test_small_file():\n+    \"\"\"Test upload of a small file (uses MemoryFileUploadHandler)\"\"\"\n+    content = b'Small file content'\n+    uploaded = SimpleUploadedFile('small.txt', content)\n+    storage = FileSystemStorage()\n+    name = storage.save('small.txt', uploaded)\n+    path = storage.path(name)\n+    perms = oct(os.stat(path).st_mode & 0o777)\n+    print(f\"Small file permissions: {perms}\")\n+    return path\n+\n+def test_large_file():\n+    \"\"\"Test upload of a large file (uses TemporaryFileUploadHandler)\"\"\"\n+    content = b'Large file content' * 1000000  # Create ~15MB file\n+    with TemporaryUploadedFile('large.txt', 'text/plain', len(content), 'utf-8') as uploaded:\n+        uploaded.write(content)\n+        uploaded.seek(0)\n+        storage = FileSystemStorage()\n+        name = storage.save('large.txt', uploaded)\n+        path = storage.path(name)\n+        perms = oct(os.stat(path).st_mode & 0o777)\n+        print(f\"Large file permissions: {perms}\")\n+        return path\n+\n+if __name__ == '__main__':\n+    small_path = test_small_file()\n+    large_path = test_large_file()\n+    print(\"\\nBoth files should have 0o644 permissions\")\n\\ No newline at end of file\n",
    "model_name_or_path": "claude-3-5-sonnet-20241022_maxiter_100_N_v2.1-no-hint-v0.5-multiaction-run_1"
  }
]