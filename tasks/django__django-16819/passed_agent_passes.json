[
  {
    "instance_id": "django__django-16819",
    "model_patch": "diff --git a/django/db/migrations/operations/models.py b/django/db/migrations/operations/models.py\nindex 967a91fdc8..f9ff9d414b 100644\n--- a/django/db/migrations/operations/models.py\n+++ b/django/db/migrations/operations/models.py\n@@ -807,6 +807,38 @@ class IndexOperation(Operation):\n     def model_name_lower(self):\n         return self.model_name.lower()\n \n+    def reduce(self, operation, app_label):\n+        # Check if operations are on different models or different indexes\n+        if (\n+            not isinstance(operation, IndexOperation) or\n+            self.model_name_lower != operation.model_name_lower or\n+            (isinstance(self, AddIndex) and\n+             isinstance(operation, RemoveIndex) and\n+             self.index.name != operation.name) or\n+            (isinstance(self, RemoveIndex) and\n+             isinstance(operation, AddIndex) and\n+             self.name != operation.index.name)\n+        ):\n+            # Operations are independent, can be optimized through\n+            return True\n+\n+        # Check if operations can be eliminated\n+        if (\n+            # Case 1: AddIndex followed by RemoveIndex\n+            (isinstance(self, AddIndex) and\n+             isinstance(operation, RemoveIndex) and\n+             self.model_name_lower == operation.model_name_lower and\n+             self.index.name == operation.name) or\n+            # Case 2: RemoveIndex followed by AddIndex\n+            (isinstance(self, RemoveIndex) and\n+             isinstance(operation, AddIndex) and\n+             self.model_name_lower == operation.model_name_lower and\n+             self.name == operation.index.name)\n+        ):\n+            return []\n+\n+        return super().reduce(operation, app_label)\n+\n \n class AddIndex(IndexOperation):\n     \"\"\"Add an index on a model.\"\"\"\n",
    "model_name_or_path": "epam-ai-run"
  },
  {
    "instance_id": "django__django-16819",
    "model_patch": "diff --git a/django/db/migrations/operations/models.py b/django/db/migrations/operations/models.py\nindex 967a91fdc8..58fc36c2d0 100644\n--- a/django/db/migrations/operations/models.py\n+++ b/django/db/migrations/operations/models.py\n@@ -861,6 +861,15 @@ class AddIndex(IndexOperation):\n     def migration_name_fragment(self):\n         return \"%s_%s\" % (self.model_name_lower, self.index.name.lower())\n \n+    def reduce(self, operation, app_label):\n+        if isinstance(operation, RemoveIndex):\n+            if (\n+                self.model_name_lower == operation.model_name_lower\n+                and self.index.name.lower() == operation.name.lower()\n+            ):\n+                return []\n+        return super().reduce(operation, app_label)\n+\n \n class RemoveIndex(IndexOperation):\n     \"\"\"Remove an index from a model.\"\"\"\n@@ -886,6 +895,15 @@ class RemoveIndex(IndexOperation):\n             index = to_model_state.get_index_by_name(self.name)\n             schema_editor.add_index(model, index)\n \n+    def reduce(self, operation, app_label):\n+        if isinstance(operation, AddIndex):\n+            if (\n+                self.model_name_lower == operation.model_name_lower\n+                and self.name.lower() == operation.index.name.lower()\n+            ):\n+                return []\n+        return super().reduce(operation, app_label)\n+\n     def deconstruct(self):\n         kwargs = {\n             \"model_name\": self.model_name,\n",
    "model_name_or_path": "epam-ai-run"
  }
]