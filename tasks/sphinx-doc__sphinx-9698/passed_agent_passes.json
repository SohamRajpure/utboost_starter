[
  {
    "instance_id": "sphinx-doc__sphinx-9698",
    "model_patch": "diff --git a/sphinx/domains/python.py b/sphinx/domains/python.py\nindex cd02eaad5..1a3bd60c7 100644\n--- a/sphinx/domains/python.py\n+++ b/sphinx/domains/python.py\n@@ -796,7 +796,7 @@ class PyMethod(PyObject):\n         if 'classmethod' in self.options:\n             return _('%s() (%s class method)') % (methname, clsname)\n         elif 'property' in self.options:\n-            return _('%s() (%s property)') % (methname, clsname)\n+            return _('%s (%s property)') % (methname, clsname)\n         elif 'staticmethod' in self.options:\n             return _('%s() (%s static method)') % (methname, clsname)\n         else:\ndiff --git a/src/conf.py b/src/conf.py\nnew file mode 100644\nindex 000000000..e69de29bb\ndiff --git a/src/index.rst b/src/index.rst\nnew file mode 100644\nindex 000000000..cfbcd3be2\n--- /dev/null\n+++ b/src/index.rst\n@@ -0,0 +1,5 @@\n+\n+.. py:method:: Foo.bar\n+   :property:\n+\n+.. py:property:: Foo.baz\ndiff --git a/test_index_entry.py b/test_index_entry.py\nnew file mode 100644\nindex 000000000..a0c1fba1c\n--- /dev/null\n+++ b/test_index_entry.py\n@@ -0,0 +1,53 @@\n+import os\n+from sphinx.application import Sphinx\n+from sphinx.util.docutils import docutils_namespace\n+\n+def test_index_entry_property():\n+    # Create test directory structure\n+    test_dir = os.path.abspath(os.path.dirname(__file__))\n+    src_dir = os.path.join(test_dir, 'src')\n+    build_dir = os.path.join(test_dir, 'build')\n+    \n+    # Create source directory if it doesn't exist\n+    os.makedirs(src_dir, exist_ok=True)\n+    \n+    # Create test files\n+    with open(os.path.join(src_dir, 'conf.py'), 'w') as f:\n+        f.write('')\n+        \n+    with open(os.path.join(src_dir, 'index.rst'), 'w') as f:\n+        f.write('''\n+.. py:method:: Foo.bar\n+   :property:\n+\n+.. py:property:: Foo.baz\n+''')\n+\n+    # Run Sphinx\n+    with docutils_namespace():\n+        app = Sphinx(\n+            src_dir,\n+            src_dir,\n+            build_dir,\n+            build_dir,\n+            'html'\n+        )\n+        app.build()\n+\n+        # Get the index entries\n+        domain = app.env.get_domain('py')\n+        \n+        # Get all index entries\n+        for name, dispname, type, docname, anchor, prio in domain.get_objects():\n+            print(f\"Object - Name: {name}, Display: {dispname}, Type: {type}\")\n+            \n+        # Get the index data\n+        index_data = domain.get_objects()\n+        for name, dispname, type, docname, anchor, prio in index_data:\n+            if type == 'method' and name == 'Foo.bar':\n+                print(f\"Method index entry: {dispname}\")\n+            elif type == 'property' and name == 'Foo.baz':\n+                print(f\"Property index entry: {dispname}\")\n+\n+if __name__ == '__main__':\n+    test_index_entry_property()\n\\ No newline at end of file\n",
    "model_name_or_path": "emergent-e1-241223"
  }
]