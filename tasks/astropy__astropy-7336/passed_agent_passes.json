[
  {
    "instance_id": "astropy__astropy-7336",
    "model_patch": "diff --git a/astropy/units/decorators.py b/astropy/units/decorators.py\nindex 8bece5a850..ca3095e202 100644\n--- a/astropy/units/decorators.py\n+++ b/astropy/units/decorators.py\n@@ -221,9 +221,9 @@ class QuantityInput:\n             with add_enabled_equivalencies(self.equivalencies):\n                 return_ = wrapped_function(*func_args, **func_kwargs)\n             if wrapped_signature.return_annotation is not inspect.Signature.empty:\n-                return return_.to(wrapped_signature.return_annotation)\n-            else:\n-                return return_\n+                if wrapped_signature.return_annotation is not None:\n+                    return return_.to(wrapped_signature.return_annotation)\n+            return return_\n\n         return wrapper\n\ndiff --git a/reproduce_issue.py b/reproduce_issue.py\nnew file mode 100644\nindex 0000000000..cc943f0261\n--- /dev/null\n+++ b/reproduce_issue.py\n@@ -0,0 +1,12 @@\n+import astropy.units as u\n+\n+\n+class PoC(object):\n+\n+    @u.quantity_input\n+    def __init__(self, voltage: u.V) -> None:\n+        pass\n+\n+\n+if __name__ == '__main__':\n+    poc = PoC(1.*u.V)\n\\ No newline at end of file\ndiff --git a/test_edge_cases.py b/test_edge_cases.py\nnew file mode 100644\nindex 0000000000..bd17eb9058\n--- /dev/null\n+++ b/test_edge_cases.py\n@@ -0,0 +1,49 @@\n+import astropy.units as u\n+\n+# Test 1: Constructor with no return annotation\n+class Test1:\n+    @u.quantity_input\n+    def __init__(self, voltage: u.V):\n+        pass\n+\n+# Test 2: Constructor with None return type\n+class Test2:\n+    @u.quantity_input\n+    def __init__(self, voltage: u.V) -> None:\n+        pass\n+\n+# Test 3: Method with unit return type\n+class Test3:\n+    @u.quantity_input\n+    def get_voltage(self, voltage: u.V) -> u.V:\n+        return voltage\n+\n+# Test 4: Method with no input units but None return type\n+class Test4:\n+    @u.quantity_input\n+    def do_something(self) -> None:\n+        pass\n+\n+if __name__ == '__main__':\n+    # Test all cases\n+    print(\"Testing constructor with no return annotation...\")\n+    t1 = Test1(1.*u.V)\n+    print(\"OK\")\n+\n+    print(\"\\nTesting constructor with None return type...\")\n+    t2 = Test2(1.*u.V)\n+    print(\"OK\")\n+\n+    print(\"\\nTesting method with unit return type...\")\n+    t3 = Test3()\n+    result = t3.get_voltage(2.*u.V)\n+    if not isinstance(result, u.Quantity) or result != 2.*u.V:\n+        raise AssertionError(\"Test 3 failed\")\n+    print(\"OK\")\n+\n+    print(\"\\nTesting method with no input units but None return type...\")\n+    t4 = Test4()\n+    t4.do_something()\n+    print(\"OK\")\n+\n+    print(\"\\nAll tests passed!\")\n\\ No newline at end of file\n",
    "model_name_or_path": "2024-02-03-openhands-4x-scaled"
  }
]