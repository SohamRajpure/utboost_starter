[
  {
    "instance_id": "matplotlib__matplotlib-13989",
    "model_patch": "diff --git a/lib/matplotlib/axes/_axes.py b/lib/matplotlib/axes/_axes.py\nindex 4b73d52293..2531fa4e0c 100644\n--- a/lib/matplotlib/axes/_axes.py\n+++ b/lib/matplotlib/axes/_axes.py\n@@ -6686,7 +6686,7 @@ optional.\n \n         density = bool(density) or bool(normed)\n         if density and not stacked:\n-            hist_kwargs = dict(density=density)\n+            hist_kwargs = dict(density=density, range=bin_range)\n \n         # List to store all the top coordinates of the histograms\n         tops = []\ndiff --git a/lib/matplotlib/tests/test_axes.py b/lib/matplotlib/tests/test_axes.py\nindex cff4325f19..6df0dae2bb 100644\n--- a/lib/matplotlib/tests/test_axes.py\n+++ b/lib/matplotlib/tests/test_axes.py\n@@ -1664,6 +1664,17 @@ def test_hist_density():\n     ax.hist(data, density=True)\n \n \n+def test_hist_range_and_density():\n+    \"\"\"Test that hist respects range when density=True.\"\"\"\n+    np.random.seed(19680801)\n+    x = np.random.rand(10)\n+    fig, ax = plt.subplots()\n+    _, bins, _ = ax.hist(x, 'auto', range=(0, 1), density=True)\n+    assert bins[0] == 0\n+    assert bins[-1] == 1\n+    plt.close(fig)\n+\n+\n @image_comparison(baseline_images=['hist_step_log_bottom'],\n                   remove_text=True, extensions=['png'])\n def test_hist_step_log_bottom():\n",
    "model_name_or_path": "agentscope-swe"
  }
]