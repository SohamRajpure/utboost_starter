[
  {
    "instance_id": "astropy__astropy-13453",
    "model_patch": "diff --git a/astropy/io/ascii/html.py b/astropy/io/ascii/html.py\nindex 266cf229cc..c5a1105145 100644\n--- a/astropy/io/ascii/html.py\n+++ b/astropy/io/ascii/html.py\n@@ -347,15 +347,17 @@ class HTML(core.BaseReader):\n         self._check_multidim_table(table)\n \n         cols = list(table.columns.values())\n \n         self.data.header.cols = cols\n+        self.data.cols = cols\n \n         if isinstance(self.data.fill_values, tuple):\n             self.data.fill_values = [self.data.fill_values]\n \n         self.data._set_fill_values(cols)\n+        self.data._set_col_formats()\n \n         lines = []\n \n         # Set HTML escaping to False for any column in the raw_html_cols input\n         raw_html_cols = self.html.get('raw_html_cols', [])\n",
    "model_name_or_path": "Augment_Agent"
  },
  {
    "instance_id": "astropy__astropy-13453",
    "model_patch": "diff --git a/astropy/io/ascii/html.py b/astropy/io/ascii/html.py\n--- a/astropy/io/ascii/html.py\n+++ b/astropy/io/ascii/html.py\n@@ -349,6 +349,10 @@\n         cols = list(table.columns.values())\n \n         self.data.header.cols = cols\n+        # Set column formats from the input\n+        for col in cols:\n+            if col.info.name in self.data.formats:\n+                col.info.format = self.data.formats[col.info.name]\n \n         if isinstance(self.data.fill_values, tuple):\n             self.data.fill_values = [self.data.fill_values]\n",
    "model_name_or_path": "gemini"
  },
  {
    "instance_id": "astropy__astropy-13453",
    "model_patch": "diff --git a/astropy/io/ascii/html.py b/astropy/io/ascii/html.py\nindex 1220930..398adba 100644\n--- a/astropy/io/ascii/html.py\n+++ b/astropy/io/ascii/html.py\n@@ -437,6 +437,8 @@ class HTML(core.BaseReader):\n                                     new_cols.append(new_col)\n                             else:\n \n+                                if col.info.name in self.data.formats:\n+                                    col.info.format = self.data.formats[col.info.name]\n                                 col_iter_str_vals = self.fill_values(col, col.info.iter_str_vals())\n                                 col_str_iters.append(col_iter_str_vals)\n \n",
    "model_name_or_path": "agentless"
  }
]